# 
# Deploy kubernetes in microk8s. 
#
# This must be done first because it provides DNS and because
# credentials are created here that get passed to admins on 
# opus. 
#

- name: Install required packages.
  apt:
    update_cache: yes
    cache_valid_time: 3600
    pkg: 
      - open-iscsi

- name: Enable iscsi (needed for OpenEBS)
  ansible.builtin.systemd:
    name: iscsid.service
    enabled: yes
    state: restarted

- name: Enable the iscsi-tcp module.
  blockinfile:
    path: /etc/modules-load.d/iscsi-tcp.conf
    create: yes
    block: |
      iscsi_tcp

- name: Load the iscsi-tcp module.
  modprobe:
    name: iscsi_tcp
    state: present

- name: Install microk8s by snap
  snap:
    classic: yes
    name:
      - microk8s

- name: Add the user ubuntu to microk8s
  user:
    name: ubuntu
    groups: microk8s
    append: yes

- name: Reset SSH to allow ubuntu int microk8s group.
  meta: reset_connection
  
- name: Start microk8s
  shell: /snap/bin/microk8s start 

- name: Wait for microk8s
  shell: /snap/bin/microk8s status --wait-ready 

- name: Enable Helm v3
  shell: /snap/bin/microk8s enable helm3 
  when: worker is undefined

- name: Enable kube dns.
  shell: /snap/bin/microk8s enable dns 
  when: worker is undefined
  
- name: Enable OpenEBS
  shell: /snap/bin/microk8s enable openebs
  when: worker is undefined
  
- name: Enable MetalLB
  shell: /snap/bin/microk8s enable metallb "{{ lb_ip_range }}"
  when: worker is undefined
  
- name: Enable Ingress
  shell: /snap/bin/microk8s enable ingress 
  when: worker is undefined

- name: Enable RBAC
  shell: /snap/bin/microk8s enable rbac
  when: worker is undefined

- name: Enable RBAC
  shell: /snap/bin/microk8s enable dashboard 
  when: worker is undefined

- name: Allow traffic from microk8s cni0 interface
  ufw:
    rule: allow
    interface: cni0
    direction: in 

- name: Allow traffic from microk8s cni0 interface
  ufw:
    rule: allow
    interface: cni0
    direction: out

- name: Allow traffic from microk8s vxlan.calico interface
  ufw:
    rule: allow
    interface: vxlan.calico
    direction: in 

- name: Allow traffic from microk8s vxlan.calico interface
  ufw:
    rule: allow
    interface: vxlan.calico
    direction: out

- name: Allow all traffic from the maas network.
  community.general.ufw:
    rule: allow
    src: 192.168.0.0/24

- name: Allow forwarding
  ufw:
    rule: allow
    route: yes

- name: Get microk8s configuration file. 
  delegate_to: '{{ inventory_hostname }}'
  raw: '/snap/bin/microk8s config'
  register: microk8s_secret
  changed_when: False
  when: worker is undefined

- name: Save the kubectl config file locally. 
  local_action: copy content={{ microk8s_secret.stdout }} dest=roles/admins/secrets/kube-config-{{ inventory_hostname }}
  when: worker is undefined
